#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_systemd_action
source ynh_add_secure_repos__2
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
password=$YNH_APP_ARG_PASSWORD
name=$YNH_APP_ARG_NAME
registration=$YNH_APP_ARG_REGISTRATION
cache=$YNH_APP_ARG_CACHE
size=$YNH_APP_ARG_SIZE
random_key=$(ynh_string_random 64)
admin_email=$(ynh_user_get_info $admin 'mail')

## Bypass package_checker name not compatible with pleroma
if [ "$admin" = "package_checker" ]
then
	admin="test"
fi

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info "Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_print_info "Storing installation settings..."

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set "$app" name         "$name"
ynh_app_setting_set "$app" registration "$registration"
ynh_app_setting_set "$app" cache        "$cache"
ynh_app_setting_set "$app" size         "$size"
ynh_app_setting_set "$app" admin_email  "$admin_email"
ynh_app_setting_set "$app" random_key   "$random_key"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_print_info "Configuring firewall ..."

# Find a free port
port=$(ynh_find_port 8095)
ynh_app_setting_set $app port $port

#=================================================
# ADD ERLANG REPOSITORY
#=================================================
ynh_print_info "Adding Erlang repository..."

wget https://packages.erlang-solutions.com/debian/erlang_solutions.asc
apt-key add erlang_solutions.asc
rm erlang_solutions.asc
if [ "$(lsb_release --codename --short)" == "jessie" ]; then
	ynh_install_extra_repo --repo="deb http://packages.erlang-solutions.com/debian jessie contrib"
elif [ "$(lsb_release --codename --short)" == "stretch" ]; then
	ynh_install_extra_repo --repo="deb http://packages.erlang-solutions.com/debian stretch contrib"
fi
ynh_package_update

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_print_info "Installing dependencies ..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_print_info "Creating a PostgreSQL database..."

db_name=$(ynh_sanitize_dbid $app)
db_pwd=$(ynh_string_random 30)
ynh_app_setting_set $app db_name $db_name
ynh_app_setting_set "$app" db_pwd "$db_pwd"
ynh_psql_test_if_first_run
ynh_psql_create_user "$app" "$db_pwd"
ynh_psql_execute_as_root "CREATE DATABASE $db_name ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0 OWNER $db_name;"
ynh_psql_execute_as_root "\connect $db_name 
CREATE EXTENSION IF NOT EXISTS unaccent;"
ynh_psql_execute_as_root "\connect $db_name 
CREATE EXTENSION IF NOT EXISTS pg_trgm;"
ynh_psql_execute_as_root "\connect $db_name 
CREATE EXTENSION IF NOT EXISTS citext;"
ynh_psql_execute_as_root "\connect $db_name 
CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info "Setting up source files ..."

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path/$app"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config
if [ $cache -eq 1 ]
then
	cp -rf "../conf/cache.conf" "/etc/nginx/conf.d/$app-cache.conf"
	ynh_replace_string "{APP}"    "$app"  "/etc/nginx/conf.d/$app-cache.conf"
	ynh_replace_string "__SIZE__" "$size" "/etc/nginx/conf.d/$app-cache.conf"
	ynh_store_file_checksum "/etc/nginx/conf.d/$app-cache.conf"
	ynh_replace_string  "{APP}"     "$app"  "../conf/media.conf"
	ynh_replace_string  "__PORT__"  "$port" "../conf/media.conf"
	sudo su -c "cat ../conf/media.conf >> /etc/nginx/conf.d/$domain.d/$app.conf"
	ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info "Configuring system user ..."

# Create a system user
ynh_system_user_create "$app" "$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================

cp -f ../conf/generated_config.exs "$final_path/$app/config/prod.secret.exs"

ynh_replace_string "__DOMAIN__"        "$domain"        "$final_path/$app/config/prod.secret.exs"
ynh_replace_string "__KEY__"           "$random_key"    "$final_path/$app/config/prod.secret.exs"
ynh_replace_string "__INSTANCE_NAME__" "$name"          "$final_path/$app/config/prod.secret.exs"
ynh_replace_string "__DB_NAME__"       "$db_name"           "$final_path/$app/config/prod.secret.exs"
ynh_replace_string "__DB_PWD__"        "$db_pwd"        "$final_path/$app/config/prod.secret.exs"
ynh_replace_string "__ADMIN_EMAIL__"   "$admin_email"   "$final_path/$app/config/prod.secret.exs"
ynh_replace_string "__PORT__"          "$port"          "$final_path/$app/config/prod.secret.exs"

if [ $cache -eq 1 ]
then
	ynh_replace_string "__MEDIA_CACHE__"    "true"        "$final_path/$app/config/prod.secret.exs"
else
	ynh_replace_string "__MEDIA_CACHE__"    "false"        "$final_path/$app/config/prod.secret.exs"
fi

#  Set registrations open/closed
if [ $registration -eq 1 ]
then
 ynh_replace_string "__REG__" "true"  "$final_path/$app/config/prod.secret.exs"
else
 ynh_replace_string "__REG__" "false" "$final_path/$app/config/prod.secret.exs"
fi

#=================================================
# MAKE SETUP
#=================================================

# Give permission to the final_path
chown -R "$app":"$app" "$final_path"

pushd $final_path/$app
    # App setup and db migration
    sudo -u "$app" MIX_ENV=prod mix local.hex --force
    sudo -u "$app" MIX_ENV=prod mix local.rebar --force
    sudo -u "$app" MIX_ENV=prod mix deps.get
    sudo -u "$app" MIX_ENV=prod mix ecto.migrate --force

    # Add user
    sudo -u "$app" MIX_ENV=prod mix pleroma.user new "$admin" "$admin_email" --password "$password" --moderator --admin -y

	#Generate key pair
    sudo -u "$app" MIX_ENV=prod mix web_push.gen.keypair >> "config/prod.secret.exs"
	ynh_replace_string "administrator@example.com" "$admin_email" "$final_path/$app/config/prod.secret.exs"

	#Create uploads dir
	mkdir uploads
popd

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_print_info "Configuring a systemd service ..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/$app/config/prod.secret.exs"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R "$app":"$app" "$final_path"

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_print_info "Configuring log rotation ..."

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

#yunohost service add $app --log "/var/log/$app/APP.log"
# if using yunohost version 3.2 or more in the 'manifest.json', a description can be added
yunohost service add $app --description "$app daemon for Pleroma" --log "/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Configuring SSOwat ..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# START SERVICE
#=================================================

ynh_systemd_action --action=start --service_name=$app --log_path=systemd --line_match="Running Pleroma.Web.Endpoint"

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Installation of $app completed"
